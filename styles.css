body {
  margin: auto;
  color: var(--darktext);
  overflow-y: hidden;
  font-family: proxima-nova, sans-serif;
  font-weight: 300;
  font-style: normal;
}


em {
  font-family: proxima-nova, sans-serif;
  font-weight: 300;
  font-style: italic;
  font-size: 12pt;
  margin: 0;
  padding: 0;
}

b {
  font-family: proxima-nova, sans-serif;
  font-weight: 700;
  font-style: normal;
  font-size: 16pt;
  border-radius: 3px;
}

.subtitle {
  font-size: 20px;
  font-style: italic;
  font-weight: 300;
  font-family: "richmond-display", 'Times New Roman', serif;
  text-align: left;
  margin: 0;
  padding: 0 40px;
  padding-left: 80px;
}

sub {
  font-size: 10px;
}

hr {
  width: 470px;
  margin-top: 75px;
  margin-bottom: 60px;
}

ul {
  margin-left: 0px;
  padding-left: 16px;
}

button {
  font-family: "Proxima Nova", sans-serif;

}

/* our core colour palette so we can easily restyle elements */

:root {
  --taskborder: rgb(210, 210, 230);
  --lighttext: rgb(255, 255, 255);
  --lightbg: rgb(255, 255, 255);
  --darktext: rgb(10, 10, 10);
  --taskTitle: #36367A;
  --guides: rgb(57, 45, 91);
  --topbar: #181f38;
  --portfolio: #284966;
  /* rgb(210, 210, 230) */
  /* rgb(233, 234, 242) */
}


/* Side panel open and close buttons */

.openList {
  background-image: url(expand.png);
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-color: rgba(0,0,0,0);
  height: 20px;
  width: 26px;
  border: none;
  align-self: flex-end;
  position: static;
  transition: flex 0.5s ease;
  margin-top: 10px;
  margin-right: 10px;
  cursor: pointer;
}

.closeList {
  background-image: url(close.png);
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-color: rgba(0,0,0,0);
  height: 20px;
  width: 26px;
  border: none;
  align-self: flex-end;
  position: static;
  transition: flex 0.5s ease;
  margin-top: 10px;
  margin-right: 10px;
  cursor: pointer;

}






button:hover {
  transition: flex 0.5s ease;
}

button:active {
  transform: translateY(2px);
  transition: flex 0.5s ease;
}

p {
  font-family: proxima-nova, sans-serif;
  font-weight: 300;
  font-style: normal;
  font-size: 12pt;
  margin: 5 10 0 10px;
}

li {
  margin-left: 20px;
}

h1 {
  margin: auto;
  font-family: "proxima-nova", sans-serif;
  font-weight: 700;
  font-style: normal;
  font-size: 22pt;
  justify-self: left;
  position:static;
  margin-top:0px;
  margin-left:10px;
}

#roadMapTitle {
  color: inherit;
}
/* These are the two ones for current task */

h2 {
  margin: auto;
  font-family: "proxima-nova", sans-serif;
  font-weight: 700;
  font-style: italic;
  font-size: 20pt;
  margin-top:0px;
  margin-left:0px;
  margin-bottom: 0px;
  line-height: 1.2;
}

h3 {
  margin: auto;
  font-family: "proxima-nova", sans-serif;
  font-weight: 300;
  font-style: italic;
  font-size: 20pt;
  margin-top:0px;
  margin-left:0px;
  justify-self: left;
  align-self: flex-end;
  position:static;
  line-height: 20px;
}

/* This is the smaller subtitle */

h4 {
  font-family: "Proxima-nova", sans-serif;
  font-weight: 600;
  font-style: italic;
  font-size: 16pt;
  margin: 10px 0 10px 10px;
}

h5 {
  font-family: "Proxima-nova", sans-serif;
  font-weight: 700;
  font-size: 16pt;
  margin: 10px 0 10px 10px;
}

/* Scrollbar */

::-webkit-scrollbar {
  width: 10px;
}

/* Track */
::-webkit-scrollbar-track {
  border-radius: 10px;
  margin-top: 4px;
  margin-bottom: 4px;
  border-left: 1px solid var(--taskborder);
  background-color: var(--taskborder);

}

/* Handle */
::-webkit-scrollbar-thumb {
  background: white;
  border-radius: 10px;
  box-shadow: 0px 5px 5px 0px rgba(100, 100, 100, 0.3);
  border: 1px solid var(--taskborder);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #1d1d1d;
}


/* Everything fits into these two confusingly-named elements */

.container {
  display: flex;
  grid-row: 1/999;
  grid-column: 1/999;
  justify-content: center;
  background: linear-gradient(to left, rgb(220, 220, 230) 0%, rgb(210, 210, 231)  20%, rgb(210, 210, 231)  80%, rgb(220, 220, 230) 100%);
  height: 100%;
}

.Content {
  display: flex;
  flex-direction: column;
  width: 70%; 
}

/* The topbar, which was more important in our user testing fair prototype and doesn't really do anything now. We kept it because it looks cool and balances
the composition */

.topbar {
  text-align: left;
  flex: 0;
  padding: 0.5% 0 0.5% 2%;
  /*border-bottom: 1px solid black;*/
  background-color: var(--topbar);
  color: white;
  box-shadow: #00000040 0 6px 6px;
  font-family: "Jaldi", sans-serif;
  font-weight: 700;
  font-size: 40px;
  line-height: 1;
  height: 68px;

}


/* the top row of divs! which is just a simple flex row */

.topRow {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: stretch;
  margin: 8px 0px 8px 0px;
  flex-shrink: 0;
  border-radius: 10px;
  box-shadow: #00000040 0 6px 6px;
  background: rgb(233, 234, 242);
}


.task {
  order: 1;
  display: flex;
  flex: 1.5;
  justify-content: space-between;
  justify-content: center;
  align-items: center;
}

/* By default the stats panel is roughly 1/3rd the width of the current task panel that it's adjacent to */

.userStats {
  display: flex;
  flex-direction: column;
  flex: 0.4; 
  margin: 0 0px;
  height: 100%;
  align-self: center;
  transition: flex 0.5s ease;
  border-radius: 5px;
  background-color: white;
  color: rgb(0, 0, 0);
  overflow: hidden;
  white-space: nowrap;


}

/* but if the user expands the tasklist the panel collapses to give more space for the other elements. This took a little while to get things like the text looking good
but I'm really proud of it :) - Leah */

.userStatsClosed {
  display: flex;
  flex-direction: column;
  flex: 0 1; 
  margin: 0 0px;
  height: 500px;
  align-self: center;
  transition: flex 0.5s ease;
  border-right: none;
  overflow: hidden;
  white-space: nowrap;
}

.userStatsClosed h1 {
  transition: flex 0.5s ease;

}

.statsPanelAvatar {
  display: flex;
  flex-direction: column;
  margin: 8px 0 10px 0;
  height: 53%;
  width: 95%;
  align-self: center;
  overflow: hidden;
  border-radius: 5px;
  background-image:linear-gradient(to top, #83a4d4 23%, #b6fbff 100%);
  justify-content: flex-end;
  position: relative; /* Required for pseudo-element positioning */
}

.statsPanelAvatar::before {
  content: ""; /* Necessary to create the pseudo-element */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url(assets/LILGUY.png) 150% center no-repeat; /* Image background */
  background-size: 120% 120%;
  background-position-x: 50%;
  background-position-y: 14%;
  filter: drop-shadow(2px 8px 3px #00000042);

  box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.5); /* Add the drop shadow */
  z-index: 0; /* Ensure it stays behind the main content */
  border-radius: 5px; /* Match the parent elementâ€™s border-radius */
}


/* The buttons for the stats modal which are mostly unchanged from the base style, just in black and white */

.statsExpandButton {
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid var(--taskborder);
  cursor: pointer;
  align-self: flex-end;
  position: fixed;
  margin: 8px 8px;
  opacity: 1;
  transition: opacity 0.5s ;
  padding: 0px 8px 0px 8px;


  display:flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
z-index: 2;
  background-color: white;
  box-shadow: rgba(0, 0, 0, 0.25) 0px 6px 6px;

}

.statsExpandButtonClosed {
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid black;
  cursor: pointer;
  align-self: flex-end;
  position: fixed;
  margin: 4px 8px;
  opacity: 0;
  transition: opacity 0.3s ;
  padding: 0px 8px 0px 8px;


  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

}

/* Styling for starbars, which are a simple div element with another div inside for the bar and a p element for the number */

.statsPanelName{
  padding: 8px;
  align-self: left;
  text-align: left;
  white-space: nowrap;
  font-weight: bold;
  color: var(--lighttext);
  font-size: 14pt;
  filter: drop-shadow(2px 2px 1px #0000007c);
}

.statsPanelStat{
  display: flex;
  flex-direction: row;
  align-self: center;
  justify-content: space-between;

  height:20px;
  width: 90%;
  border-radius: 15px;
  /* margin-top: 10px; */
  margin-bottom: 4px;
  background: rgb(233, 234, 242)
}

.statPanelBar{
  /* width: 5px; */
  height: 100%;
  color: white;
  text-align: right;
  z-index: 0;
  border-radius: 15px;

}

/* The numbers for the stat bars. Had to remove the width and then translate them over so they wouldn't push the bar div out of the way */

.statPanelNumber {
  width: 0;
  z-index: 1;
  transform: translateX(-50px);
}

/* Each bar has colours assigned by an ID. The would've been done programatically if we had time to fully implement them with task confusion */

#stat1Bar {
  width: 33%; 
  background-color:#A2BC6A;
  stroke: 1px;
}

#stat2Bar {
  width: 50%;
  background-color: #7C8C5A;
}

#stat3Bar {
  width: 20%;
  background-color: #739096;
}

#stat4Bar {
  width: 30%;
  background-color: #F29B88;
}

#stat5Bar {
  width: 24%;
  background-color: #FFE9BA;
}

#stat6Bar {
  width: 24%;
  background-color: #F2CC85;
}

/* The 'weekly goal' bar where the stat is split into eight 'pips', so the user can see a clear increment whenever they complete a task */

.statsPanelGoal {
  display: flex;
  flex-direction: row;
  align-self: center;
  justify-content: space-between;

  height:20px;
  width: 90%;

  /* margin-top: 10px; */
  margin-bottom: 4px;
  gap: 2px;
}

.goalPip{
  flex: 1;
  height: 100%;
  background-color:#FFDC64;
  color: white;
  text-align: right;
  z-index: 0;
  border-radius: 10px;
}

.emptyGoalPip{
  flex: 1;
  height: 100%;
  background-color:#e5e5e5;
  color: white;
  text-align: right;
  z-index: 0;
  border-radius: 10px;
  box-shadow: inset #00000025 0 6px 6px;

}



.userStatsClosed .statsPanel {
  transition: flex 0.5s ease;
  overflow: hidden;

}

/* Current/Chosen Task widget. Tried to keep this all simple with flexboxes but the currenttask window in particular became very confusing once started trying to have it
toggle between tasks and roadmap */

.currentTask{
  display: flex;
  flex-direction: row;
  flex: 1; /* Adjust width as needed */
  height: 100%;
  width: 100%;
  /* align-items: center; */
  justify-content: center;
  position: relative;
  z-index: 1;
  background-color: rgb(210, 210, 230);
}

.currentTask h1 {
  width: 0;
  z-index: 0;
  margin-left: 10px;
}


.chosenTask {
  display: grid;
  grid-auto-flow: row;
  grid-row-gap: 10px;
  height: 320px;
  width: 380px;
  align-self: center;
  position: fixed;
  background-color: white;
  box-shadow: #00000040 0 6px 6px;
  border-radius: 10px;
  padding: 15px;
  margin-bottom: 50px;
  border: 1px solid var(--taskborder);
  z-index: 999;
}



.chosenTaskContainer {
  display: flex;
  flex-direction: column;
  height: 320px;
  width: 380px;
  align-self: center;
  position: fixed;
  align-self: center;
  margin-bottom: 50px;
  z-index: 999;

}


.chosenTaskHidden {
  display:none;
}

.chosenTaskFooter{
  display: flex;
  width: 100%;
  justify-content: space-between;
}

.chosenTaskButtons{
  display: flex;
  width: 50%;
  justify-content: space-between;
  background-color: white;
  border-radius: 15px;
  margin-top: 8px;
  align-items: center;
  box-shadow: #00000040 0 6px 6px;
  align-self: center;
  padding: 0px 8px 0px 8px;
  margin-top: 16px;

}

.chosenTaskNext {
  border: 1px solid black;
  border-radius: 20px;
  width: 30px;
  height: 30px;
  align-content: center;
  background-color: white;
}

.chosenTaskPrev{
  border: 1px solid black;
  border-radius: 20px;
  width: 30px;
  height: 30px;
  align-content: center;
  background-color: white;
}

.chosenTaskOpen {
  height: 320px;
  width: 380px;

  cursor: pointer;

  justify-self: flex-end;
  align-self: center;
  margin: 4px 8px 4px 8px;
  opacity: 0;

  

  display:flex;
  flex-direction: row;
  justify-content: space-between;

  position: relative;

}

.chosenTaskOpenHidden{
  display: none;
}

.chosenTaskType {
  align-self: center;
  margin: 0 4px 8px 8px;

}

/* The mostly-unused side panel buttons */

.sideButtons {
  display: flex;
  flex: 1 1;
  flex-direction: column; 
  justify-content: space-between; 
  align-items: flex-end; 
  width: 0;
  z-index: 1;
  height: 100%;
  border: none;
  margin-right: 8px;
  align-self: flex-end;
}


/* the completely unused zoom in and out buttons */

.zoomButtons {
  display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
  align-items: flex-end;
  border: none;
  color: white;
  font-family: "richmond-display", 'Times New Roman', serif;
  padding: 5px 10px;
  text-align: center;
  text-decoration: none;
  font-size: 16px;
  border-radius: 8px;
  align-self: flex-end;
  position: static;
  margin-bottom: 5px;
}

.zoomIn {
  width: 20px;
  text-align: center;
  color: white;
  background-color: rgb(27, 27, 27);
  margin-bottom: 10px;
  display:none;
}

.zoomOut {

  font-weight: bold;
  width: 35px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid var(--taskborder);
  cursor: pointer;
  align-self: flex-end;
  margin: 8px 8px;
  opacity: 1;
  transition: opacity 0.5s ;
  padding: 0px 8px 0px 8px;
  box-shadow: #00000040 0 6px 6px;

  
  display:flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;

  background-color: white;


}

.zoomOut img {
  width: auto;
  height: 70%;
}

.openMap{
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid var(--taskborder);
  cursor: pointer;
  align-self: flex-end;
  margin: 8px 8px;
  opacity: 1;
  transition: opacity 0.5s ;
  padding: 0px 8px 0px 8px;
  box-shadow: #00000040 0 6px 6px;

  
  display:flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  background-color: white;

}

/* the roadmap/task toggle */



#SwitchBtn{
  z-index: 9999;
  /* position: fixed; */
}

/* The two styles for expanding and shrinking the tasklist, allowing it to expand out to roughly double the size */

.myTasks {
  order: 2;
  display: flex;
  flex-direction: column;
  flex: 0.748; /* For some ungodly reason the border of this panel only lines up with the one below if its very minutely off */
  height: 500px;
  align-content: flex-start;
  transition: flex 0.5s ease; 
  border-radius: 5px;
}


.myTasksOpen {
  order: 2;
  display: flex;
  flex-direction: column;
  flex: 1.5; 
  margin: 0;
  height: 500px;
  align-content: flex-start;
  align-self: flex-end;
  transition: flex 0.5s ease; 
  border-radius: 0 10px 10px 0;


}

/* the header used for the guides widget */

.sectionHeader {
  padding: 1% 2% 1% 4%;
  height: 46px;
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: 1fr;
  align-items: center;
  background-color: var(--guides);
  /*border-bottom: 1px solid black;*/
  border-radius: 9px 9px 0 0;
}

/* The header used for the task widget */

.taskSectionHeader {
  padding: 1% 2% 1% 4%;
  height: 47px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: var(--taskTitle);
  box-shadow: #00000040 0 6px 6px;
  border-radius: 0 9px 0 0;
}

.sectionTitle {
  margin: 0;
  justify-self: left;
  color: var(--lighttext);
}

/* Buttons for opening tasks and guides modal */

.taskExpandButton, .guidesExpandButton {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0 8px 0 8px;
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid black;
  cursor: pointer;
  justify-self: right;
  filter: invert(100%);
}


.taskList {
  display: flex;
  flex-direction: column;
  height: 100%;
  align-content: flex-start;
  overflow-y: scroll;
  overflow-x: hidden;
  background: rgb(233, 234, 242);
  padding: 4px;
  border-bottom: 1px solid var(--taskTitle);
  border-top: 1px solid var(--taskTitle);
  align-items: center;
}


.taskGroup {
  padding: 15px;
  border-top: 1px solid black;
  display: grid;
}





.taskStageHeader {
  display: flex;
  flex-direction: row;
  padding: 8px;
  width: 97%;
  justify-content: space-between;
  /*overflow-x: hidden;*/
  align-items: center;
  position: sticky;
  z-index: 1;
  cursor: pointer;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  margin: 4px;

  border-bottom: 1px solid var(--taskborder);
  box-shadow: #00000040 0 6px 6px;
  background-color: var(--lightbg);
}


.taskHeaderExpand {
  display: flex;
  justify-self: right;
  background: none;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  border: none;
  cursor: pointer;
  justify-content: center;
  grid-row: 1;
  grid-column: 2;
}

.taskHeaderExpandImage {
  width: 30px;
  height: 30px;
}

.taskHeaderExpandActive {
  transform: scaleY(-1);
}

/* Cards used for the task modal */

.taskItems {
  grid-row: 2;
  grid-column: 1 / 3;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  justify-content: space-between;
  align-content: center;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease;
}

.taskStage {
  display: flex;
  flex-direction:column;
  align-items: center;
  width: 95%;
  min-height: 0;
  max-height: 0;
  transition: max-height 0.3s ease;
  overflow: hidden;
}


.taskItemsActive {
  max-height: min-content;
  min-height: min-content;
}

.taskItemTask {
  background: white;
  margin: 10px 10px 10px 10px;

  border-radius: 15px;
  overflow: hidden;
  display: grid;
  grid-template-columns: 1fr;
  align-items: center;
  justify-items: center;
  box-shadow: #00000040 0 6px 6px;
}

.taskItemTaskComplete {
  background: white;
  margin: 10px 10px 10px 10px;

  border-radius: 15px;
  overflow: hidden;
  display: grid;
  grid-template-columns: 1fr;
  align-items: center;
  justify-items: center;
  box-shadow: #00000040 0 6px 6px;
  filter:sepia(50%);
}

.taskItemTaskImg {
  height: 100px;
  width: 200px;
  grid-column: 1 / 4;
  object-fit: contain;
}

.taskItemTaskBoldText {
  font-size: 15px;
  font-weight: bold;
  margin: 0;
}

.taskItemTaskText {
  font-size: 14px;
  margin: 0;
}

.taskItemTaskTitle {
  justify-self: left;
  padding: 10px;
  grid-row: 2;
  grid-column: 1 / 4;
}

.taskItemTaskExpandable {
  padding: 10px;
  justify-self: left;
  grid-row: 3;
  grid-column: 1 / 4;
  margin: 0;
}

.taskItemTaskList {
  margin: 0;
  list-style-position: inside;
}

.taskItemTaskTime {
  padding: 10px 0 10px 10px;
  justify-self: left;
  grid-row: 4;
  grid-column: 1;
}

.taskItemTaskStars {
  padding: 10px 10px 10px 0;
  grid-row: 4;
  grid-column: 2;
  margin: 0;
  display: flex;
  flex-direction: row;
}

.taskItemTaskStar {
  height: 20px;
  width: 20px;
}

.taskItemTaskTick {
  justify-self: right;
  grid-row: 4;
  grid-column: 3;
  width: 15px;
  height: 15px;
  margin: 0 10px 0 0;
}


/* The footer for quickly navigating through the list */

.taskListFooter {
  display: flex;                  /* Flexbox layout */
  flex-direction: row;           /* Arrange items in a row */
  justify-content: space-between; /* Space between items */
  position: sticky;              /* Sticky positioning */
  background-color: var(--taskTitle);       /* Background color */
  /*border-top: 1px solid #ccc;    !* Top border *!*/
  height: 30px;                  /* Fixed height */
  padding: 8px 16px 8px 16px;
  border-radius: 0 0 10px 0;
  gap: 8px;
}

.taskListFooter button {
  cursor: pointer;                /* Change cursor to pointer for buttons */
  display: flex;                 /* Allow flex properties in buttons if needed */
  align-items: center;           /* Center text vertically */
  justify-content: center;       /* Center text horizontally */
  border-radius: 10px;
  width: 80px;
  background-color: var(--taskTitle);
  color: white;
  border: 1px solid white;
}

/* the cards that appear in the list, which show less detail until they are expanded */

.listTask {
  display: flex;
  flex-direction: column;
  min-height: fit-content;
  width: 98%;
  /*border-radius: 5px;*/
  /* overflow: hidden; */
  transition: flex 0.5s ease;
  background: white;
  margin: 8px 16px 0px 16px;
  box-shadow: #00000040 0 6px 6px;
    /*padding: 8px 16px 8px 16px;*/
  border-radius: 15px;
  border: 1px solid var(--taskborder);

}

.listTaskOpen {
  display: flex;
  flex-direction: column;
  min-height: fit-content;
  background: white;
  margin: 8px 10px 0px 10px;
  border-radius: 15px;
  box-shadow: #00000040 0 6px 6px;
  width: 98%;
  /*padding: 8px 16px 8px 16px;*/
  transition: flex 0.5s ease;
  border: 1px solid yellow;
}

/* since its all the same programmatic html, the image and description are hidden from the div when its in its normal non-expanded shape */

.listTask .listTaskImg{
  display: none;
}

.listTask .taskDescription{
  display: none;
}

.listTaskOpen .taskDescription{
  font-size: 10pt;
}

.listTask ul{
  display: none;
}


.listTask h3 {
  font-size: 20px;
}


.taskHeader {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 0 16px 0 16px;
  align-items: center;
  color: var(--darktext);
}

.listTaskTitle{
  width: 95%;
  font-size: 18px;
  color: black;

}

.listTaskOpen .listTaskTitle {
  font-family: proxima-nova, sans-serif;
  font-weight: 700;
  font-style: normal;
}

.listTaskImg {
  height: 140px;
  width: 140px;
  align-self: baseline;
  /* object-fit: contain; */
  filter: drop-shadow(3px 3px 3px #00000060);

}


.listTaskSection{
  padding: 2% 0 0 15px;
  font-size: 12px;
  align-self: flex-start;
  margin-bottom: 8px;
}

.taskFooter {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 0 20px 0 20px;
  align-items: center;
}





.listTaskOpen p  {
  padding-left: 16px;
}

.listTask ul {
  padding-left: 16px;
}



/* The Bottom Row element! */

.bottomRow {
  display: flex;
  /* flex: 2 0 300px; */
  justify-content: space-between;
  align-items: center;
  /* height: 300px; */

}

/* The main my portfolio widget */

.myPortfolio {
  display: flex;
  flex-direction: column;
  flex: 2;
  justify-content: space-between;
  height: 380px;
  background-color: var(--portfolio);
  border-radius: 10px;
  box-shadow: #00000040 0 6px 6px;
  overflow-y: hidden;
}

.portfolioHeader {
  display: flex;
  padding: 0.7% 1% 0.5% 2%;
  background-color: var(--portfolio);
  color: white;
}

.portfolioModalOpenButton {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0 8px 0 8px;
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid black;
  cursor: pointer;
  justify-self: right;
  filter: invert(100%);
  margin: 0.5% 0 0 0;
}

/* the container div for sections */

.portfolioSections {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  height: 100%;
  overflow-y: scroll;
  padding: 8px 16px 16px 16px;
  gap: 16px;
  margin-bottom: 8px;
  background: rgb(233, 234, 242);
}

/* and the sections themseslves */

.portfolioSection {
  display: flex;
  flex-direction: column;
  flex: 1 1 300px;
  background: white;
  height: 304px;;
  border-radius: 15px;
  overflow: hidden;
  grid-auto-flow: row;
  grid-template-rows: 125px;
  justify-items: left;
  box-shadow: #00000040 0 6px 6px;
  border: 1px solid var(--taskborder);
}

.portfolioSectionHeader {
  padding: 16px 8px 8px 8px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.portfolioSectionHeader b {
  line-height: 0;
}


.sectionExpandButton {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0px 8px 0px 8px;
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid black;
  cursor: pointer;
  justify-self: right;
  margin: 0px 8px 8px 8px;
  align-self: flex-end;
  position: relative;
}

/* The container for the portfolio section cards themselves */

.portfolioSectionContent {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  height: 100%;
  padding: 8px;
  gap: 8px;
}

/* Thumbnails are just simple flexboxes so a later version should be able to drop them into the element dynamically from a function as the user
uploads images and writes text for their portfolio sections */

.portfolioSectionContentThumbnailLarge{
  flex: 2;
  border-radius: 5px;
  position: relative;
  background-color: rgb(233, 234, 242);
}

.portfolioSectionContentThumbnailSmall{
  flex: 1;
  border-radius: 5px;
  position: relative;
  background-color: rgb(233, 234, 242);
}

/* Labels for the thumbnails to keep track in the longer term */

.thumbnailLabel {
    position: absolute;
    bottom: 8px;
    right: 8px;
    background-color: rgb(0, 0, 0); 
    color: #fff;
    padding: 2px 6px;
    font-size: 0.7rem;
    border-radius: 4px;
    font-weight: bold;
    font-family: Arial, sans-serif;
    box-shadow: 0px 2px 4px rgba(0, 0, 0);
    text-transform: uppercase;
}

.portfolioSectionFooter {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
  background-color: white;
  border-top: 1px
}

.portfolioSectionProgressBar {
  display: flex;
  flex-direction: row;
  align-self: center;
  justify-content: space-between;
  height: 30px;
  width: 90%;
  border-radius: 15px;
  /* margin-top: 10px; */
  margin-bottom: 8px;
  margin-left: 8px;
  background: rgb(233, 234, 242);
}

.portfolioSectionProgressBarNumber {
  width: 0;
  text-wrap: nowrap;
  transform: translateX(-100px); 
}

/* Only way I could think of to stop the numbers from messing with the statbars. Clumsy but it works! */

/* GUIDES WIDGET */


.guides {
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100%;
  margin-left: 8px;
  border: 1px solid rgb(110, 110, 110);
  background: var(--guides);

  border-radius: 10px;
  box-shadow: #00000040 0 6px 6px;
}

.slideshow {
  /* grid-row: 2;
  display: grid;
  grid-template-columns: auto 1fr auto;
  grid-template-rows: 1fr auto;
  grid-gap: 15px;
  justify-items: center;
  align-items: center;
  width: 100%;
  background-color: var(--lightbg);
  border-radius: 0 0 9px 9px;
  */
  height: min-content; 
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding-top: 30px;
  padding-bottom: 8px;
  background-color: rgb(233, 234, 242);
}

.cardAndButtons {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 96%;
  align-items: center;
  padding-left: 16px;
  padding-right: 16px;
}

.slideshowButton {
  height: 30px;
  width: 30px;
  border: none;
  cursor: pointer;
  background: white;
  margin: 0;
  padding: 0;
  border-radius: 50%;
  transition: background 0.1s ease;
  grid-row: 1;
  border: 1px solid var(--taskborder);
  box-shadow: #00000040 0 6px 6px;

}

.slideshowButton:hover {
  background: #00000020;
}

.slideshowButtonPrev {
  grid-column: 1;
}

.slideshowButtonNext {
  grid-column: 3;
}

.slideshowImg {
  height: 20px;
  width: 20px;
  /* filter: invert(100%); */
}

.slideshowImgNext {
  transform: scaleX(-1);
}

.slideshowCategory {
  grid-column: 2;
  display: none;
}

.slideshowCategoryActive {
  display: block;
}

.slideshowItem {
  background: white;
  width: 330px;
  /*width: auto;*/
  height: 225px;
  border-radius: 15px;
  overflow: hidden;
  display: none;
  grid-auto-flow: row;
  grid-template-rows: 125px;
  justify-items: left;
  box-shadow: #00000040 0 6px 6px;
  text-decoration: none;
  color: black;
  border: 1px solid var(--taskborder);

}

.slideshowItemActive {
  display: grid;
}

.slideshowItemImg {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

.slideshowItemTitle {
  font-size: 15px;
  font-weight: bold;
  margin: 0;
  padding: 15px 15px 0 15px;
  align-content: start;
}

.slideshowItemAuthor {
  font-size: 13px;
  margin: 0;
  padding: 0 0 15px 15px;
  align-content: end;
}

.slideshowDots {
  grid-row: 2;
  grid-column: 1 / 4;
  display: grid;
  grid-column-gap: 10px;
  grid-auto-flow: column;
  margin-top: 24px;
  box-shadow: #00000040 0 6px 6px;
  background-color: white;
  padding: 4px;
  border-radius: 10px;
  border: 1px solid var(--taskborder);
}

.slideshowDot {
  border: none;
  margin: 0;
  cursor: pointer;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #d7d7d7;
  transition: background 0.1s ease;
}

.slideshowDot:hover {
  background: #404040;
}

.slideshowDotActive {
  background: #bd93f9;
}



.bottombar {
  flex: 1;
}

/* now lets go to the modals! */

/* MODALS BELOW */

.modalGrid {
  display: grid;
  grid-template-columns: 20%  60% 20%;
  grid-template-rows: 1fr 5fr 1fr;
  height: 100%;

}

/* BACKGROUND */

.modalBackground {
  grid-row: 1/999;
  grid-column: 1/999;
  z-index: -1;
  background-color: #404040;
  opacity: 0;
    transition: z-index 0.5s step-end, opacity 0.5s ease;
}

.modalBackground.active {
  z-index: 999;
  grid-row: 1/999;
  grid-column: 1/999;
  opacity: 70%;
  transition: z-index 0.5s step-start, opacity 0.5s ease;
}

/* generic modal */
.modal {
  padding: 40px;
  display: grid;
  border-radius: 10px;
  background: white;
  opacity: 0;
  z-index: 1000;
  overflow-y: scroll;
  transform: scale(0);
  transition: .3s ease;
}


/* TASK MODALS */

/*task modal on button click. Every other modal is based on these proportions to an extent*/
.taskExpandModal {
  grid-template-rows: auto 1fr repeat(999, auto) 1fr; /*1fr at top below header, and at bottom, to center the Ideation etc elements. adjust fr to change proportion of spacing above and below*/
  grid-template-columns: 1fr minmax(min-content, 80%) 1fr;
  grid-row: 2;
  grid-column: 2;
}

.modal.active {
  opacity: 1;
  transform: scale(1);
}

.taskSubHeader {
  font-size: 30px;
  margin: 0;
  padding-top: 25px;
}

.taskDescription {
  margin: 0;
  padding: 10px 0 10px 0;
}

.taskModalTasks {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min-content, 50%));
  grid-template-rows: repeat(999, auto) 1fr;
  /*grid-column-gap: 50px;*/
  justify-content: space-between;
}

.modalHeader {
  grid-row: 1;
  grid-column: 1 / 3;
  margin: 0;
}

.taskSubHeaderFourth {
  grid-row: 12;
  grid-column: 2;
}
.taskDescriptionFourth {
  grid-row: 13;
  grid-column: 2;
}
.taskModalTasksFourth {
  grid-row: 14;
  grid-column: 2;
}

.taskSubHeaderFifth {
  grid-row: 15;
  grid-column: 2;
}

.taskDescriptionFifth {
  grid-row: 16;
  grid-column: 2;
}

.taskModalTasksFifth {
  grid-row: 17;
  grid-column: 2;
}

.modalClose {
  grid-row: 1;
  grid-column: 4;
  background-color: transparent;
  font-size: 30px;
  border: 0;
  height: 35px;
  width: 35px;
  cursor: pointer;
  text-align: center;
  border-radius: 50%;
  transition: .1s ease;
}

.modalClose:hover {
  background-color: gray;
}


.taskSubHeaderIdeation {
  grid-row: 3;
  grid-column: 2;
}

.taskDescriptionIdeation {
  grid-row: 4;
  grid-column: 2;
}

.taskModalTasksIdeation {
  grid-row: 5;
  grid-column: 2;
}

.taskSubHeaderSecond {
  grid-row: 6;
  grid-column: 2;
}

.taskDescriptionSecond {
  grid-row: 7;
  grid-column: 2;
}

.taskModalTasksSecond {
  grid-row: 8;
  grid-column: 2;
}

.taskSubHeaderThird {
  grid-row: 9;
  grid-column: 2;
}

.taskDescriptionThird {
  grid-row: 10;
  grid-column: 2;
}

.taskModalTasksThird {
  grid-row: 11;
  grid-column: 2;
}

/* TASK COMPLETION MODALS*/

.taskCompletionExpandButton {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0 8px 0 8px;
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid black;
  cursor: pointer;
  justify-self: right;
}

.taskCompletionModal {
  padding: 40px;
  display: flex;
  flex-direction: column;
  align-items: center;;
  grid-template-rows: auto 1fr repeat(999, auto) 1fr; 
  grid-template-columns: 1fr minmax(min-content, 850px) 1fr;
  grid-row: 2;
  grid-column: 2;
  border-radius: 10px;
  background: white;
  opacity: 0;
  z-index: 1000;
  overflow-x: hidden;
  overflow-y: scroll;
  transform: scale(0);
  transition: .3s ease;
  overflow-y: hidden;
  justify-self: center;
  width:50%;

}


.taskCompletionModal.active {
  opacity: 1;
  transform: scale(1);
}

.taskCompletionModal .modalClose{
  align-self: center;
}

.taskCompletionModal .modalHeader{
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.taskCompletionModalContainer {
  width: 100%;
  height: 100%;
}

.taskCompletionModalContent {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    align-self: center;
    background-color: white;
    border-radius: 10px;
    padding: 8px;
    justify-content: center;
  
}


.taskCompletionModalTextInput {
  display: flex;
  flex-direction: row;
  width: 100%;
}

.taskCompletionModalSubmit{

width: 70px;
height: 40px;
right: 32px;
background-color: white;
border: 1px solid black;
border-radius: 15px;
cursor: pointer;
}

.taskCompletionModalContent input{
  height:200px;
  border: none;
  border-radius: 15;
  background-color: rgb(210, 210, 231);
  margin-top: 20px;
  margin-bottom: 20px;
  width: 100%;  
  }
  

.taskCompletionModalText{
  width: 80%;
  align-self: center;
  height:200px;
  
}

.taskCompletionModalImage{
  height: 200px;
  justify-self: flex-start;
}

.taskCompletionModalContent h2{
  width: 80%;

  align-self: center;
  margin:0px;
}

.taskCompletionModalContent h3{
  width:  100%;
  align-self: center;
  margin:0px;
}

.taskCompletionModalFooter {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width:100%
}

/* STATS */

.statsExpandModal {
  padding: 40px;
  display: flex;
  flex-direction: column;
  align-items: center;;
  grid-template-rows: auto 1fr repeat(999, auto) 1fr; 
  grid-template-columns: 1fr minmax(min-content, 850px) 1fr;
  grid-row: 2;
  grid-column: 2;
  border-radius: 10px;
  background: white;
  opacity: 0;
  z-index: 1000;
  overflow-x: hidden;
  overflow-y: scroll;
  transform: scale(0);
  transition: .3s ease;
}

.statsModalAvatar {
  /* flex: 0.4; Adjust width as needed */
  margin: 8px 0 10 0px;
  height: 45%;
  width: 90%;
  align-self: center;
  overflow: hidden;
  /* border: 1px solid black; */
  border-radius: 5px;
  background: rgb(210, 210, 230) url(assets/LILGUY.png) no-repeat;
  background-size: cover;
  background-origin: content-box;
  box-shadow: 0px 5px 5px 0px rgba(100, 100, 100, 0.699);

}

.modalUserStats {
  display: flex;
  flex-direction: column;
  flex: 1; /* Adjust width as needed */
  /* margin: 0 0px; */
  height: 500px;
  align-self: center;
  transition: flex 0.5s ease;
  border-right: 1px solid black;
  
  color: rgb(0, 0, 0);
  overflow: hidden;

}

.statsExpandModal .modalClose{
  align-self: center;
}

.statsExpandModal .modalHeader{
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.statsExpandModal.active {
  opacity: 1;
  transform: scale(1);
}

.statsModalContent {
  display: flex;
  flex-direction: row;
  /* justify-self: center; */
  width: 100%;
  height: 90%;
}

.additionalBars {
  margin-left: 20px;
  margin-right: 20px;
  flex: 1.5;
  height: 100%;
  align-self: center;
  align-content: center;
}

.statsModalStat{
  display: flex;
  flex-direction: row;
  align-self: center;
  justify-content: space-between;

  height:25px;
  width: 100%;
  border: 1px solid black;
  border-radius: 15px;
  /* margin-top: 10px; */
  margin-bottom: 8px;
}

.statsExpandModal .statsPanelGoal {
  width: 100%;
}

.statsExpandModal  .statName {
  display: flex;
  flex-direction: row;
  margin-bottom: 8px;
justify-content: space-between;
width: 100%;
}

.statsModalStat .statPanelNumber {
align-self:flex-end;
}

/* the 'equipment' the user would earn to customise their character if we had way more time to make this thing really cool */

.avatarEquipment {
  width: 90%;
  height: 30%;
  /* border: 1px solid black; */
  margin-top: 10px;
  align-self: center;
  display: flex;
  flex-direction: row;
  gap: 8px;
}

.slot {
  flex: 1;
  display: flex;
  flex-direction: column-reverse;
  height: 100%;
  border-radius: 10px;
  background-color: #bd93f9;
  align-items: center;
  box-shadow: inset #00000040 0 3px 6px;
  font-weight: italic;
  background: rgb(210, 210, 230);

}

#slot1 {
  background:rgb(210, 210, 230) url(assets/lface.png) center no-repeat;
  background-size: cover;
  background-origin: content-box;

}

#slot2 {
  background: rgb(210, 210, 230) url(assets/lshirt.png) center no-repeat;
  background-size: cover;
  background-origin: content-box;
}

#slot3 {
  background: rgb(210, 210, 230) url(assets/lpants.png) center no-repeat;
  background-size: cover;
  background-origin: content-box;
}



/* MY PORTFOLIO MODAL */

.portfolioExpandModal {
  padding: 40px;
  display: flex;
  flex-direction: column;
  align-items: center;;
  grid-template-rows: auto 1fr repeat(999, auto) 1fr; 
  grid-template-columns: 1fr minmax(min-content, 850px) 1fr;
  grid-row: 2;
  grid-column: 2;
  border-radius: 10px;
  background: white;
  opacity: 0;
  z-index: 1000;
  overflow-x: hidden;
  overflow-y: scroll;
  transform: scale(0);
  transition: .3s ease;
}

.portfolioExpandModal.active {
  opacity: 1;
  transform: scale(1);
}

.portfolioExpandModal .modalClose{
  align-self: center;
}

.portfolioExpandModal .modalHeader{
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.portfolioExpandModal.active {
  opacity: 1;
  transform: scale(1);
}

.portfolioModalContent {
  display: flex;
  flex-direction: row;
  /* justify-self: center; */
  width: 100%;
  height: 90%;
  flex-wrap: wrap;
  gap: 8px
}

.portfolioExpandModal .portfolioSection{
flex: 1 1 49%;
height: 500px;
}

.portfolioExpandModal .portfolioSectionContent{
display: flex;
flex-wrap: wrap;
flex-direction: row;
  }

  .portfolioExpandModal .portfolioSectionContentThumbnailLarge {
flex: 2 0 60%;
  }

  .portfolioExpandModal .portfolioSectionContentThumbnailSmall {
    flex: 1 0 33%;
  }
/* GUIDES MODAL */




.guidesExpandModal {
  grid-template-rows: auto 1fr repeat(999, auto) 1fr; /*1fr at top below header, and at bottom, to center the Ideation etc elements. adjust fr to change proportion of spacing above and below*/
  grid-template-columns: 1fr minmax(min-content, 850px) 1fr;
  grid-row: 2;
  grid-column: 2;
}

.guidesSubHeader {
  font-size: 30px;
  margin: 0;
  padding-top: 25px;
}

.guideCategory {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min-content, 250px));
  grid-template-rows: repeat(999, auto) 1fr;
  grid-column-gap: 50px;
}

.guideItem {
  background: white;
  margin: 10px 0 10px 0;
  width: 250px;
  border-radius: 15px;
  overflow: hidden;
  display: grid;
  grid-auto-flow: row;
  grid-template-rows: 125px;
  justify-items: left;
  box-shadow: #00000040 0 6px 6px;
  text-decoration: none;
  color: black;
}

.guideItemImg {
  height: 100%;
  width: 100%;
  object-fit: contain;
}

.guideItemTitle {
  font-size: 15px;
  font-weight: bold;
  margin: 0;
  padding: 15px 15px 0 15px;
  align-content: start;
}

.guideItemAuthor {
  font-size: 13px;
  margin: 0;
  padding: 0 0 15px 15px;
  align-content: end;
}




.guidesSubHeaderIdeation {
  grid-row: 3;
  grid-column: 2;
}

.guideCategoryIdeation {
  grid-row: 4;
  grid-column: 2;
}

.guidesSubHeaderDrafting {
  grid-row: 5;
  grid-column: 2;
}

.guideCategoryDrafting {
  grid-row: 6;
  grid-column: 2;
}

.guidesSubHeaderInterviewPrep {
  grid-row: 7;
  grid-column: 2;
}

.guideCategoryInterviewPrep {
  grid-row: 8;
  grid-column: 2;
}


/* The Slideshow in the guides widget */





.chosenTaskImg {
  height: 20px;
  width: 20px;
}

.chosenTaskImgNext {
  transform: scaleX(-1);
}




/* Roadmap styling TRIAL */

/* Add Milestone Button Styles */
.add-milestone-button {
  margin: 10px 0;
  padding: 8px 16px;
  font-size: 11px;
  background-color: #5a4b56;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.add-milestone-button:hover {
  background-color: #846f7e;
}

/* New Milestone Form Styles */
.new-milestone-form {
  /* display: none; */
  margin: 10px 0;
  align-items: center;
}

.new-milestone-form input[type="text"] {
  padding: 6px;
  font-size: 14px;
  width: 200px;
  margin-right: 10px;
}

.new-milestone-form button {
  padding: 6px 12px;
  font-size: 14px;
  margin-right: 5px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.new-milestone-form button[type="submit"] {
  background-color: #5a4b56;
  color: #fff;
}

.new-milestone-form .cancel-button {
  background-color: #ccc;
}

.new-milestone-form button:hover {
  opacity: 0.9;
}


/* Task Window and RoadMap Visibility */
.taskWindow {
  display: block;
}

.openMap{
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid var(--taskborder);
  cursor: pointer;
  align-self: flex-end;
  margin: 8px 8px;
  opacity: 1;
  transition: opacity 0.5s ;
  padding: 0px 8px 0px 8px;
  box-shadow: #00000040 0 6px 6px;

  
  display:flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  background-color: white;

}

.roadMap {
  display: none;
  height: 100%;
  width: 100%;
}

.roadMapDrafting {
  display: none;
  height: 100%;
  width: 100%;
}

.roadMapFinalisation {
  display: none;
  height: 100%;
  width: 100%;
}

.roadMapInterview {
  display: none;
  height: 100%;
  width: 100%;
}

.roadMapOpen h1 {
  position: sticky;
  width: 0;
  z-index: 4;
  /* margin-left: 10px; */
  align-self:baseline;
  left: 0;
  top: 0;
  transform: translateX(-20px) translateY(-20px);
  color: var(--lighttext);
  filter: drop-shadow(2px 6px 4px #00000060);

}


.roadMapOpen{
  position: absolute;
  height: 460px;
  min-width: 600px;
  max-width: 700px;
  display: flex;
  flex-grow: 2;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: 20px 20px 20px 20px;
  background-color: lightblue;
  background-image: url(assets/ideationbg.png)  ;
  background-size:130% 130%;
  background-position-x: 40%;
  background-position-y: 90%;
  overflow:hidden;
}

.roadMapOpenDrafting{
  position: absolute;
  height: 460px;
  min-width: 600px;
  max-width: 700px;
  display: flex;
  flex-grow: 2;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: 20px 20px 20px 20px;
  background-color: lightblue;
  background-image: url(assets/ideationbg.png)  ;
  background-size:130% 130%;
  background-position-x: 40%;
  background-position-y: 90%;
  overflow:hidden;
}

.roadMapOpenFinalisation{
  position: absolute;
  height: 460px;
  min-width: 600px;
  max-width: 700px;
  display: flex;
  flex-grow: 2;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: 20px 20px 20px 20px;
  background-color: lightblue;
  background-image: url(assets/ideationbg.png)  ;
  background-size:130% 130%;
  background-position-x: 40%;
  background-position-y: 90%;
  overflow:hidden;
}

.roadMapOpenInterview{
  position: absolute;
  height: 460px;
  min-width: 600px;
  max-width: 700px;
  display: flex;
  flex-grow: 2;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: 20px 20px 20px 20px;
  background-color: lightblue;
  background-image: url(assets/ideationbg.png)  ;
  background-size:130% 130%;
  background-position-x: 40%;
  background-position-y: 90%;
  overflow:hidden;
}

.roadMapZoomedOut{
  display:none;
}

.roadMapZoomedOutOpen{
  position: absolute;
  height: 460px;
  min-width: 600px;
  max-width: 700px;
  display: flex;
  flex-grow: 2;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: 20px 20px 20px 20px;
  background-color: lightblue;
  background-image: url(assets/zoomedout.png)  ;
  background-size:180% 180%;
  background-position-x: 40%;
  background-position-y: 50%;
  overflow:hidden;
}

.roadMapZoomedOutOpen h1 {
  position: sticky;
  width: 0;
  z-index: 4;
  /* margin-left: 10px; */
  align-self:baseline;
  left: 0;
  top: 0;
  transform: translateX(-20px) translateY(-20px);
  color: var(--lighttext);
  filter: drop-shadow(2px 6px 4px #00000060);

}

.mapCluster{
  z-index: 2;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  border: 3px solid var(--lightbg);
  /* background-color: var(--lightbg); */
  border-radius: 15px;
  align-items: center;
  position: absolute;
}

.mapClusterName {
  position: fixed;
  align-self: flex-end;
  filter: drop-shadow(2px 6px 4px #00000060);
  color: var(--lighttext);
  margin-left:8px;
  transform: translateY(30px);
}


.mapCluster hr {
  transform: translatey(25px);
}

.mapDot{
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 15px;
  height: 15px;
  background-color: var(--lightbg);
  border: 1px solid var(--taskborder);
  border-radius: 15px;
  margin: 32px; 
  transform: translatey(20px);
  bottom:-30px;
  position: relative;
  overflow: visible;
  cursor: pointer;
  transition: 0.1s ease-out;
  position: relative;
  z-index: 3;
}

.mapDotComplete{
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 12px;
  height: 12px;
  background-color: rgb(214, 214, 214);
  border-radius: 15px;
  margin: 32px; 
  transform: translatey(20px);
  bottom:-30px;
  position: relative;
  overflow: visible;
  cursor: pointer;
  transition: 0.1s ease-out;
}



.mapDot:hover{
  transform: translateY(18px);
  transition: 0.1s ease-out;

}

.mapDotCurrent{
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 20px;
  height: 20px;
  background-color: red;
  border-radius: 15px;
  margin: 32px; 
  transform: translatey(20px);
  bottom:-30px;
  position: relative;
  overflow: visible;
  cursor: pointer;
  box-shadow: #00000040 0 6px 6px;
  z-index: 999;

}

.mapLine{
  max-width:4px;
  min-height:20px;
  background-color: darkred;
  border-radius: 15px;
  transform: translatey(-25px);
  opacity: 0;
  box-shadow: #00000040 0 6px 6px;

}

.mapDotCurrent .mapLine {
  opacity: 1;
}

.mapMarker{
  /* transform: translatex(-90px) translatey(-20px);  */
  min-width: 90px;
  min-height: 90px;
  background: url("assets/lface.png") center no-repeat;
  background-size: cover;
  background-origin: content-box;
  animation-name: bob;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: ease-in-out;
  filter: drop-shadow(2px 6px 4px #00000060);
  opacity: 0;
  position: relative;
}

.mapMarkerText {
  display:none;
  width:160px;
  transform: translateY(-140px);
  position: absolute;
  z-index: 999;
  text-align: center;
  background-color: white;
  padding: 4px;
  border-radius: 5px;
  box-shadow: #00000040 0 6px 6px;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}


.mapMarkerText em {
  font-size: 10pt;
}

.mapMarkerCompleteText{
  display: none;
}

.mapMarkerOpenButton {
  font-weight: bold;
  width: 80px;
  height: 35px;
  background: none;
  border-radius: 10px;
  border: 1px solid var(--taskborder);
  cursor: pointer;
  align-self: flex-end;
  margin: 8px 8px;
  opacity: 1;
  transition: opacity 0.5s ;
  padding: 0px 8px 0px 8px;
  box-shadow: #00000040 0 6px 6px;


  display:flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  background-color: white;
  transform: translateX(-44px) translateY(48px);

}

.mapMarkerOpenButton:active {
  transform: translateX(-44px) translateY(46px);
}



.mapDotCurrent .mapMarker {
  opacity: 1;
}

.mapDotCurrent .mapMarkerText {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  z-index: 999;

}


.mapDot:hover .mapMarker  {
  opacity: 0.8;
  animation: none;
  filter: saturate(0);
  transform: translatey(-110px);
}

.mapDot:hover .mapMarkerText  {
display: flex;
}

.mapDot:hover .mapMarkerOpenButton{
  display: none;
}

.mapDotComplete:hover .mapMarkerText  {
  display: flex;
  background-color: transparent; /* Override background */
  box-shadow: none; /* Remove shadow as well, if needed */

  }

.mapDotComplete:hover .mapMarkerText em {
    text-decoration: line-through;
  }

  .mapDotComplete:hover .mapMarkerCompleteText{
    display: flex;
  }
  

  .mapDotComplete:hover .mapMarkerOpenButton{
    display: none;
  }

.mapDot:hover .mapLine  {
  opacity: 0.8;
  animation: none;
  filter: saturate(0);
}

@keyframes bob {
  from {transform: translatey(-110px);}
  to {transform: translatey(-115px);}
}

#cluster1{
  transform: translatex(25px) translatey(95px);
  width: 285px;
  height: 180px;
  z-index: 9;
}


#cluster2{
  transform: translatex(450px) translatey(-150px);
  width: 80px;
  height: 80px;
}

#cluster3{
  transform: translatex(380px) translatey(176px);
  width: 80px;
  height: 80px;
}

#cluster4{
  transform: translatex(45px) translatey(-120px);
  width: 280px;
  height: 170px;
}

#cluster5{
  transform: translatex(330px) translatey(14px);
  width: 260px;
  height: 155px;
}

.roadMapZoomedOutOpen #cluster1{
  transform: translatex(80px) translatey(140px);
  width: 160px;
  height: 120px;
  z-index: 9;
}

.roadMapZoomedOutOpen #cluster3{
  transform: translatex(300px) translatey(115px);
  width: 200px;
  height: 120px;
}

.roadMapZoomedOutOpen #cluster4{
  transform: translatex(160px) translatey(-20px);
  width: 170px;
  height: 110px;
}

.roadMapZoomedOutOpen #cluster5{
  transform: translatex(280px) translatey(-180px);
  width: 160px;
  height: 120px;
}

/* Fixing Overlay Issues */

/* .portfolioSectionContentThumbnailLarge{
  background: url(assets/aipatterner.png) center no-repeat;
  background-size: 100%;
  border: 1px solid var(--taskborder);
}

.portfolioSectionContentThumbnailSmall{
  background: url(assets/penguin.jpg) center no-repeat;
  background-size: 100%;
  border: 1px solid var(--taskborder);
} */